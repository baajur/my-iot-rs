var searchIndex={};
searchIndex["my_iot"] = {"doc":"Entry point.","i":[[3,"Opt","my_iot","",null,null],[12,"silent","","Show warning and error messages only",0,null],[12,"verbose","","Show debug messages",0,null],[12,"settings","","Settings file",0,null],[12,"db","","Database URL",0,null],[5,"main","","Entry point.",null,[[],[["result",["box"]],["box",["error"]]]]],[0,"consts","","",null,null],[17,"USER_AGENT","my_iot::consts","",null,null],[0,"core","my_iot","",null,null],[0,"bus","my_iot::core","Message bus",null,null],[3,"Bus","my_iot::core::bus","",null,null],[12,"service_txs","","Service message inbox senders.",1,null],[12,"tx","","The bus message inbox sender.",1,null],[12,"rx","","The bus message inbox receiver.",1,null],[11,"new","","",1,[[],["self"]]],[11,"add_tx","","Get a new message sender. Essentially, it makes a clone of…",1,[[["self"]],[["message"],["sender",["message"]]]]],[11,"add_rx","","Get a new receiver to subscribe to the bus.",1,[[["self"]],[["receiver",["message"]],["message"]]]],[11,"spawn","","Spawn the bus dispatcher thread.",1,[[],[["result",["box"]],["box",["error"]]]]],[0,"message","my_iot::core","Describes a sensor reading and related structures.",null,null],[3,"Message","my_iot::core::message","Services use messages to exchange sensor readings between…",null,null],[12,"type_","","Message type.",2,null],[12,"sensor","","Associated sensor instance.",2,null],[12,"reading","","Associated sensor reading.",2,null],[12,"metadata","","",2,null],[3,"Metadata","","Unfortunately, not everything nicely falls into the model…",null,null],[12,"enable_notification","","Useful for (for example) instant messaging, where…",3,null],[3,"Composer","","Message builder. Prefer to use it instead of directly…",null,null],[12,"message","","",4,null],[4,"Type","","Message type.",null,null],[13,"ReadLogged","","Normal persistently stored sensor reading. The most…",5,null],[13,"ReadNonLogged","","Sensor reading which become non-actual just right after it…",5,null],[13,"ReadSnapshot","","Sensor reading that invalidates previous reading. Only…",5,null],[13,"Write","","Used to control other services. One service may send this…",5,null],[11,"new","","",4,[[["string"],["into",["string"]]],["self"]]],[11,"type_","","",4,[[["type"]],["self"]]],[11,"timestamp","","",4,[[["datetime",["local"]],["into",["datetime"]]],["self"]]],[11,"value","","",4,[[["into",["value"]],["value"]],["self"]]],[11,"title","","",4,[[["string"],["into",["string"]]],["self"]]],[11,"room_title","","",4,[[["string"],["into",["string"]]],["self"]]],[11,"compose","","",4,[[],["message"]]],[0,"persistence","my_iot::core","Database interface.",null,null],[3,"Actual","my_iot::core::persistence","",null,null],[12,"sensor","","",6,null],[12,"reading","","",6,null],[5,"migrate","","",null,[[["connection"]],[["result",["box"]],["box",["error"]]]]],[5,"get_sensor","","",null,[[["row"]],[["result",["sensor"]],["sensor"]]]],[5,"get_reading","","",null,[[["row"]],[["result",["reading"]],["reading"]]]],[5,"get_actual","","",null,[[["row"]],[["result",["actual"]],["actual"]]]],[5,"get_i64","","",null,[[["row"]],[["i64"],["result",["i64"]]]]],[0,"migrations","","",null,null],[5,"create_initial_schema","my_iot::core::persistence::migrations","",null,[[["connection"]],[["result",["box"]],["box",["error"]]]]],[5,"drop_readings_because_of_changed_serialization_format","","",null,[[["connection"]],[["result",["box"]],["box",["error"]]]]],[5,"add_sensor_titles","","",null,[[["connection"]],[["result",["box"]],["box",["error"]]]]],[5,"add_room_titles","","",null,[[["connection"]],[["result",["box"]],["box",["error"]]]]],[5,"denormalize_actual_sensor_values","","Denormalize `sensors` to avoid joining the `readings`…",null,[[["connection"]],[["result",["box"]],["box",["error"]]]]],[17,"MIGRATIONS","","",null,null],[0,"primitives","my_iot::core::persistence","",null,null],[8,"Serialize","my_iot::core::persistence::primitives","",null,null],[10,"serialize","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[8,"Deserialize","","",null,null],[10,"deserialize","","",8,[[],[["box",["error"]],["result",["box"]]]]],[0,"reading","my_iot::core::persistence","",null,null],[3,"Reading","my_iot::core::persistence::reading","",null,null],[12,"timestamp","","Timestamp when the value was actually measured. This may…",9,null],[12,"value","","Attached value.",9,null],[11,"new","","",9,[[],["self"]]],[0,"sensor","my_iot::core::persistence","",null,null],[3,"Sensor","my_iot::core::persistence::sensor","",null,null],[12,"sensor_id","","",10,null],[12,"title","","",10,null],[12,"room_title","","",10,null],[11,"new","","",10,[[["string"],["into",["string"]]],["self"]]],[11,"display_title","","",10,[[["self"]],["str"]]],[0,"thread","my_iot::core::persistence","",null,null],[5,"spawn","my_iot::core::persistence::thread","Spawn the persistence thread.",null,[[["arc",["mutex"]],["bus"],["mutex",["connection"]]],[["result",["box"]],["box",["error"]]]]],[5,"process_message","","Process a message.",null,[[["message"],["arc"]],[["result",["box"]],["box",["error"]]]]],[8,"ConnectionExtensions","my_iot::core::persistence","",null,null],[10,"open_and_initialize","","",11,[[["asref",["path"]],["path"]],[["box",["error"]],["result",["connection","box"]],["connection"]]]],[10,"get_version","","Get the database `user_version`.",11,[[["self"]],[["box",["error"]],["result",["i32","box"]],["i32"]]]],[10,"select_actuals","","",11,[[["i64"],["self"]],[["vec",["actual"]],["box",["error"]],["result",["vec","box"]]]]],[10,"select_size","","Select database size in bytes.",11,[[["self"]],[["result",["u64","box"]],["box",["error"]],["u64"]]]],[10,"select_last_reading","","Select the very last sensor reading.",11,[[["str"],["self"]],[["result",["option","box"]],["box",["error"]],["option",["actual"]]]]],[10,"select_readings","","Select the latest sensor readings within the given time…",11,[[["str"],["datetime"],["self"]],[["box",["error"]],["result",["vec","box"]],["vec",["reading"]]]]],[10,"select_sensor_count","","",11,[[["self"]],[["result",["u64","box"]],["box",["error"]],["u64"]]]],[10,"select_reading_count","","",11,[[["self"]],[["result",["u64","box"]],["box",["error"]],["u64"]]]],[11,"upsert_into","my_iot::core::message","",2,[[["connection"],["self"]],[["result",["box"]],["box",["error"]]]]],[0,"services","my_iot::core","Implements generic `Service` trait.",null,null],[5,"spawn_all","my_iot::core::services","Spawn all configured services.",null,[[["bus"],["settings"],["arc"]],[["result",["box"]],["box",["error"]]]]],[5,"spawn","","Spawn a service and return a vector of its message sender…",null,[[["str"],["servicesettings"],["arc"],["bus"]],[["result",["box"]],["box",["error"]]]]],[0,"supervisor","my_iot::core","Allows to monitor thread status and automatically respawn…",null,null],[5,"spawn","my_iot::core::supervisor","Spawn a supervised named thread.",null,[[["sender",["message"]],["n"],["message"],["f"]],["result"]]],[0,"value","my_iot::core","Implements sensor reading value.",null,null],[4,"Value","my_iot::core::value","Sensor reading value.",null,null],[13,"None","","No value.",12,null],[13,"Counter","","Generic counter.",12,null],[13,"ImageUrl","","Image URL.",12,null],[13,"Boolean","","Boolean.",12,null],[13,"WindDirection","","Wind direction.",12,null],[13,"DataSize","","Size in bytes.",12,null],[13,"Text","","Plain text.",12,null],[13,"Bft","","Beaufort wind speed.",12,null],[13,"Rh","","Relative humidity in percents.",12,null],[13,"Temperature","","Thermodynamic temperature.",12,null],[13,"Length","","Length.",12,null],[4,"PointOfTheCompass","","Points of the compass.",null,null],[13,"North","","N",13,null],[13,"NorthNortheast","","NNE",13,null],[13,"Northeast","","NE",13,null],[13,"EastNortheast","","ENE",13,null],[13,"East","","E",13,null],[13,"EastSoutheast","","ESE",13,null],[13,"Southeast","","SE",13,null],[13,"SouthSoutheast","","SSE",13,null],[13,"South","","S",13,null],[13,"SouthSouthwest","","SSW",13,null],[13,"Southwest","","SW",13,null],[13,"WestSouthwest","","WSW",13,null],[13,"West","","W",13,null],[13,"WestNorthwest","","WNW",13,null],[13,"Northwest","","NW",13,null],[13,"NorthNorthwest","","NNW",13,null],[11,"class","","Get CSS color class.",12,[[["self"]],["str"]]],[11,"icon","","Get Font Awesome icon tag.",12,[[["self"]],[["box",["error"]],["str"],["result",["str","box"]]]]],[11,"is_inline","","Get whether value could be rendered inline.",12,[[["self"]],["bool"]]],[0,"errors","my_iot","",null,null],[3,"InternalError","my_iot::errors","",null,null],[12,"description","","",14,null],[11,"new","","",14,[[["string"],["into",["string"]]],["self"]]],[0,"format","my_iot","",null,null],[5,"human_format","my_iot::format","Format value to keep only 3 digits before the decimal point.",null,[[["str"],["f64"]],["string"]]],[0,"prelude","my_iot","",null,null],[8,"Datelike","my_iot::prelude","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",15,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",15,[[["self"]]]],[10,"month","","Returns the month number starting from 1.",15,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",15,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",15,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",15,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",15,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",15,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",15,[[["self"]],["weekday"]]],[10,"iso_week","","Returns the ISO week.",15,[[["self"]],["isoweek"]]],[10,"with_year","","Makes a new value with the year number changed.",15,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",15,[[["u32"],["self"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",15,[[["u32"],["self"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",15,[[["u32"],["self"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",15,[[["u32"],["self"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",15,[[["u32"],["self"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",15,[[["u32"],["self"]],["option"]]],[11,"num_days_from_ce","","Counts the days in the proleptic Gregorian calendar, with…",15,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",16,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",16,[[["self"]]]],[10,"minute","","Returns the minute number from 0 to 59.",16,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",16,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",16,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",16,[[["u32"],["self"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",16,[[["u32"],["self"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",16,[[["u32"],["self"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",16,[[["u32"],["self"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",16,[[["self"]],["u32"]]],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",17,null],[13,"Tue","","Tuesday.",17,null],[13,"Wed","","Wednesday.",17,null],[13,"Thu","","Thursday.",17,null],[13,"Fri","","Friday.",17,null],[13,"Sat","","Saturday.",17,null],[13,"Sun","","Sunday.",17,null],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the…",18,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",18,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",18,[[["u32"],["i32"],["self"]],[["date"],["localresult",["date"]]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",18,[[["u32"],["self"],["i32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",18,[[["u32"],["self"],["i32"]],[["date"],["localresult",["date"]]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",18,[[["u32"],["weekday"],["i32"],["self"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",18,[[["u32"],["weekday"],["i32"],["self"]],[["date"],["localresult",["date"]]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",18,[[["i64"],["u32"],["self"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",18,[[["i64"],["u32"],["self"]],[["datetime"],["localresult",["datetime"]]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",18,[[["i64"],["self"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",18,[[["i64"],["self"]],[["datetime"],["localresult",["datetime"]]]]],[11,"timestamp_nanos","","Makes a new `DateTime` from the number of non-leap…",18,[[["i64"],["self"]],["datetime"]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",18,[[["str"],["self"]],[["result",["datetime","parseerror"]],["parseerror"],["datetime"]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",18,[[],["self"]]],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",18,[[["self"],["naivedate"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",18,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",18,[[["self"],["naivedate"]],[["date"],["localresult",["date"]]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",18,[[["self"],["naivedatetime"]],[["datetime"],["localresult",["datetime"]]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",18,[[["self"],["naivedate"]]]],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",18,[[["self"],["naivedatetime"]]]],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",18,[[["self"],["naivedate"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",18,[[["self"],["naivedatetime"]],["datetime"]]],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",19,[[["self"]],["fixedoffset"]]],[3,"Local","","The local timescale. This is implemented via the standard…",null,null],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[3,"FixedOffset","","The time zone with fixed offset, from UTC-23:59:59 to…",null,null],[12,"local_minus_utc","","",20,null],[3,"NaiveDate","","ISO 8601 calendar date without timezone. Allows for every…",null,null],[12,"ymdf","","",21,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",null,null],[12,"secs","","",22,null],[12,"frac","","",22,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[12,"date","","",23,null],[12,"time","","",23,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[12,"date","","",24,null],[12,"offset","","",24,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[12,"datetime","","",25,null],[12,"offset","","",25,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor…",26,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",26,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",26,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",26,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",26,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",27,[[["u16"]],["self"]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",27,[[["u16"]],["self"]]],[3,"Duration","","ISO 8601 time duration with nanosecond precision. This…",null,null],[12,"secs","","",28,null],[12,"nanos","","",28,null],[3,"Receiver","","The receiving side of a channel.",null,null],[12,"flavor","","",29,null],[3,"Sender","","The sending side of a channel.",null,null],[12,"flavor","","",30,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[3,"Connection","","A connection to a SQLite database.",null,null],[12,"db","","",31,null],[12,"cache","","",31,null],[12,"path","","",31,null],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",32,[[["d"]],["result"]]],[24,"Deserialize","","",null,null],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",33,[[["s"],["self"]],["result"]]],[24,"Serialize","","",null,null],[8,"Error","","`Error` is a trait representing the basic expectations for…",null,null],[11,"source","","The lower-level source of this error, if any.",34,[[["self"]],[["option",["error"]],["error"]]]],[11,"backtrace","","Returns a stack backtrace, if available, of where this…",34,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"description","","`if let Err(e) = \"xc\".parse::<u32>() { // Print `e`…",34,[[["self"]],["str"]]],[11,"cause","","",34,[[["self"]],[["option",["error"]],["error"]]]],[3,"Arc","","A thread-safe reference-counting pointer. 'Arc' stands for…",null,null],[12,"ptr","","",35,null],[12,"phantom","","",35,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[12,"inner","","",36,null],[12,"poison","","",36,null],[12,"data","","",36,null],[6,"Result","","",null,null],[0,"services","my_iot","",null,null],[0,"buienradar","my_iot::services","",null,null],[3,"Settings","my_iot::services::buienradar","",null,null],[12,"station_id","","Station ID. Find a one here.",37,null],[3,"BuienradarFeed","","",null,null],[12,"actual","","",38,null],[3,"BuienradarFeedActual","","",null,null],[12,"sunrise","","",39,null],[12,"sunset","","",39,null],[12,"station_measurements","","",39,null],[3,"BuienradarStationMeasurement","","",null,null],[12,"station_id","","",40,null],[12,"name","","",40,null],[12,"temperature","","",40,null],[12,"ground_temperature","","",40,null],[12,"feel_temperature","","",40,null],[12,"wind_speed_bft","","",40,null],[12,"timestamp","","",40,null],[12,"wind_direction","","",40,null],[12,"weather_description","","",40,null],[5,"spawn","","",null,[[["str"],["settings"],["bus"]],[["result",["box"]],["box",["error"]]]]],[5,"fetch","","Fetch measurement for the configured station.",null,[[["client"]],[["result",["buienradarfeedactual","box"]],["buienradarfeedactual"],["box",["error"]]]]],[5,"send_readings","","Sends out readings based on Buienradar station measurement.",null,[[["str"],["buienradarfeedactual"],["u32"],["sender"]],[["result",["box"]],["box",["error"]]]]],[5,"date_format","","Implements custom date/time format with Amsterdam timezone.",null,[[["deserializer"]],[["datetime",["local"]],["result",["datetime"]]]]],[5,"point_of_the_compass","","Translates Dutch wind direction acronyms.",null,[[["deserializer"]],[["option",["pointofthecompass"]],["result",["option"]]]]],[17,"URL","","Buienradar JSON feed URL.",null,null],[17,"REFRESH_PERIOD","","",null,null],[0,"clock","my_iot::services","",null,null],[3,"Settings","my_iot::services::clock","",null,null],[12,"interval_ms","","Interval in milliseconds.",41,null],[5,"default_interval_ms","","",null,[[],["u64"]]],[5,"spawn","","",null,[[["str"],["bus"],["settings"]],[["result",["box"]],["box",["error"]]]]],[0,"db","my_iot::services","",null,null],[5,"spawn","my_iot::services::db","",null,[[["bus"],["arc"]],[["result",["box"]],["box",["error"]]]]],[17,"INTERVAL","","",null,null],[0,"lua","my_iot::services","Executes a Lua script for each message allowing to…",null,null],[3,"Settings","my_iot::services::lua","",null,null],[12,"script","","Script body.",42,null],[5,"spawn","","",null,[[["str"],["settings"],["bus"]],[["result",["box"]],["box",["error"]]]]],[5,"create_args_table","","",null,[[["message"],["context"]],[["result",["table"]],["table"]]]],[5,"init_globals","","",null,[[["str"],["context"],["sender",["message"]],["message"]],[["result",["box"]],["box",["error"]]]]],[5,"init_logging","","Expose logging functions to the context.",null,[[["str"],["context"]],[["result",["box"]],["box",["error"]]]]],[5,"init_functions","","Provides the custom functions to user code.",null,[[["sender",["message"]],["context"],["message"]],[["result",["box"]],["box",["error"]]]]],[5,"build_message","","Uses `composer` to build a message from the arguments…",null,[[["composer"],["table"],["context"]],[["result",["composer"]],["composer"]]]],[17,"MESSAGE_ARG_TYPE","","",null,null],[17,"MESSAGE_ARG_ROOM_TITLE","","",null,null],[17,"MESSAGE_ARG_SENSOR_TITLE","","",null,null],[17,"MESSAGE_ARG_VALUE","","",null,null],[17,"MESSAGE_ARG_TIMESTAMP_MILLIS","","",null,null],[0,"nest","my_iot::services","",null,null],[3,"Settings","my_iot::services::nest","",null,null],[12,"token","","Nest API token.",43,null],[3,"NestEvent","","Server-side `put` event.",null,null],[12,"data","","",44,null],[3,"NestData","","",null,null],[12,"devices","","",45,null],[3,"NestDevices","","",null,null],[12,"thermostats","","",46,null],[12,"cameras","","",46,null],[12,"smoke_co_alarms","","",46,null],[3,"NestThermostat","","",null,null],[12,"ambient_temperature_c","","",47,null],[12,"humidity","","",47,null],[12,"name","","",47,null],[12,"where_name","","",47,null],[3,"NestCamera","","",null,null],[12,"snapshot_url","","",48,null],[12,"last_event","","",48,null],[12,"name","","",48,null],[12,"where_name","","",48,null],[12,"is_online","","",48,null],[3,"NestCameraLastEvent","","",null,null],[12,"has_sound","","",49,null],[12,"has_motion","","",49,null],[12,"has_person","","",49,null],[12,"start_time","","",49,null],[12,"urls_expire_time","","",49,null],[12,"animated_image_url","","",49,null],[3,"NestSmokeCoAlarm","","",null,null],[12,"where_name","","",50,null],[12,"is_online","","",50,null],[5,"spawn","","",null,[[["str"],["bus"],["settings"]],[["result",["box"]],["box",["error"]]]]],[5,"send_readings","","",null,[[["str"],["nestevent"],["sender"]],[["result",["box"]],["box",["error"]]]]],[17,"URL","","",null,null],[0,"telegram","my_iot::services","Telegram bot service able to receive and send messages.",null,null],[3,"Settings","my_iot::services::telegram","",null,null],[12,"token","","",51,null],[3,"Context","","",null,null],[12,"client","","",52,null],[12,"service_id","","",52,null],[12,"token","","",52,null],[3,"TelegramResponse","","https://core.telegram.org/bots/api#making-requests",null,null],[12,"ok","","",53,null],[12,"description","","",53,null],[12,"result","","",53,null],[3,"TelegramUpdate","","",null,null],[12,"update_id","","",54,null],[12,"message","","",54,null],[3,"TelegramMessage","","https://core.telegram.org/bots/api#message",null,null],[12,"message_id","","",55,null],[12,"date","","",55,null],[12,"chat","","",55,null],[12,"text","","",55,null],[3,"TelegramChat","","https://core.telegram.org/bots/api#chat",null,null],[12,"id","","",56,null],[4,"TelegramChatId","","",null,null],[13,"UniqueId","","",57,null],[13,"Username","","",57,null],[4,"TelegramFile","","",null,null],[13,"Url","","",58,null],[5,"spawn","","Spawn the service.",null,[[["str"],["settings"],["bus"]],[["result",["box"]],["box",["error"]]]]],[5,"spawn_producer","","Spawn thread that listens for Telegram updates and…",null,[[["context"],["bus"]],[["result",["box"]],["box",["error"]]]]],[5,"send_readings","","Send reading messages from the provided Telegram update.",null,[[["context"],["telegramupdate"],["sender"]],[["result",["box"]],["box",["error"]]]]],[5,"spawn_consumer","","Spawn thread that listens for `Control` messages and…",null,[[["context"],["bus"]],[["result",["box"]],["box",["error"]]]]],[5,"call_api","","Call Telegram Bot API method.",null,[[["context"],["str"],["p"]],[["result",["box"]],["box",["error"]],["deserializeowned"]]]],[5,"get_updates","","https://core.telegram.org/bots/api#getupdates",null,[[["context"],["option",["i64"]],["i64"]],[["vec",["telegramupdate"]],["box",["error"]],["result",["vec","box"]]]]],[5,"send_message","","https://core.telegram.org/bots/api#sendmessage",null,[[["telegramchatid"],["bool"],["context"],["str"],["asref",["str"]]],[["result",["telegrammessage","box"]],["telegrammessage"],["box",["error"]]]]],[5,"send_photo","","https://core.telegram.org/bots/api#sendphoto",null,[[["telegramchatid"],["string"],["option",["string"]],["p"],["context"],["bool"]],[["result",["telegrammessage","box"]],["telegrammessage"],["box",["error"]]]]],[5,"send_animation","","https://core.telegram.org/bots/api#sendanimation",null,[[["telegramchatid"],["a"],["string"],["option",["string"]],["context"],["bool"]],[["result",["telegrammessage","box"]],["telegrammessage"],["box",["error"]]]]],[7,"CLIENT_TIMEOUT","","Global client timeout. Based on `GET_UPDATES_TIMEOUT`…",null,null],[17,"GET_UPDATES_TIMEOUT","","Should be positive, short polling should be used for…",null,null],[11,"new","","",52,[[["str"]],[["box",["error"]],["result",["box"]]]]],[0,"settings","my_iot","Settings structs.",null,null],[3,"Settings","my_iot::settings","Represents a root settings object.",null,null],[12,"http_port","","Web server port. It's used for the user interface as well…",59,null],[12,"max_sensor_age_ms","","Maximum duration while any sensor may be inactive before…",59,null],[12,"services","","Services configuration. Each entry is a pair of service ID…",59,null],[4,"ServiceSettings","","A service configuration.",null,null],[13,"Clock","","Regularly emits a counter value.",60,null],[13,"Buienradar","","Dutch Buienradar weather service.",60,null],[13,"Nest","","Nest API.",60,null],[13,"Telegram","","Telegram bot service.",60,null],[13,"Lua","","Lua scripting.",60,null],[5,"read","","Read the settings file.",null,[[["asref",["path"]],["path"]],[["box",["error"]],["result",["settings","box"]],["settings"]]]],[5,"default_http_port","","",null,[[],["u16"]]],[5,"default_max_sensor_age_ms","","Defaults to 30 days.",null,[[],["i64"]]],[0,"templates","my_iot","Web interface templates.",null,null],[3,"Index","my_iot::templates","",null,null],[12,"crate_version","","",61,null],[12,"actuals","","",61,null],[3,"Actual","","",null,null],[12,"crate_version","","",62,null],[12,"actual","","",62,null],[0,"filters","","",null,null],[5,"format_datetime","my_iot::templates::filters","",null,[[["datetime"]],[["result",["string"]],["string"]]]],[11,"new","my_iot::templates","",61,[[["i64"],["connection"]],[["box",["error"]],["result",["box"]]]]],[11,"new","","",62,[[["actual"]],["self"]]],[0,"web","my_iot","Implements web server.",null,null],[3,"STATICS","my_iot::web","",null,null],[12,"__private_field","","",63,null],[5,"start_server","","Start the web application.",null,[[["arc",["mutex"]],["mutex",["connection"]],["settings"]]]],[5,"index","","Get index page response.",null,[[["arc"],["settings"]],["response"]]],[5,"get_sensor","","Get sensor page response.",null,[[["str"],["arc"]],["response"]]],[5,"get_sensor_json","","Get last sensor value JSON response.",null,[[["str"],["arc"]],["response"]]],[17,"FAVICON","","",null,null],[11,"from","my_iot","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"try_into","","",0,[[],["result"]]],[11,"from","my_iot::core::bus","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"try_into","","",1,[[],["result"]]],[11,"from","my_iot::core::message","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"try_into","","",2,[[],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"try_into","","",3,[[],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"try_into","","",4,[[],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from_lua","","",5,[[["context"],["value"]],[["error"],["result",["error"]]]]],[11,"from_lua_multi","","",5,[[["context"],["multivalue"]],[["error"],["result",["error"]]]]],[11,"to_lua","","",5,[[["context"]],[["value"],["error"],["result",["value","error"]]]]],[11,"to_lua_multi","","",5,[[["context"]],[["multivalue"],["result",["multivalue","error"]],["error"]]]],[11,"try_into","","",5,[[],["result"]]],[11,"from","my_iot::core::persistence","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"try_into","","",6,[[],["result"]]],[11,"from","my_iot::core::persistence::reading","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"try_into","","",9,[[],["result"]]],[11,"from","my_iot::core::persistence::sensor","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"try_into","","",10,[[],["result"]]],[11,"from","my_iot::core::value","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"to_lua","","",12,[[["context"]],[["value"],["error"],["result",["value","error"]]]]],[11,"to_lua_multi","","",12,[[["context"]],[["multivalue"],["result",["multivalue","error"]],["error"]]]],[11,"try_into","","",12,[[],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from_lua","","",13,[[["context"],["value"]],[["error"],["result",["error"]]]]],[11,"from_lua_multi","","",13,[[["context"],["multivalue"]],[["error"],["result",["error"]]]]],[11,"to_lua","","",13,[[["context"]],[["value"],["error"],["result",["value","error"]]]]],[11,"to_lua_multi","","",13,[[["context"]],[["multivalue"],["result",["multivalue","error"]],["error"]]]],[11,"try_into","","",13,[[],["result"]]],[11,"from","my_iot::errors","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"to_lua_err","","",14,[[],["error"]]],[11,"as_fail","","",14,[[["self"]],["fail"]]],[11,"try_into","","",14,[[],["result"]]],[11,"from","my_iot::prelude","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"equivalent","","",17,[[["k"],["self"]],["bool"]]],[11,"vzip","","",17,[[],["v"]]],[11,"try_from","","",17,[[["str"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"try_into","","",64,[[],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"equivalent","","",65,[[["k"],["self"]],["bool"]]],[11,"vzip","","",65,[[],["v"]]],[11,"try_into","","",65,[[],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"equivalent","","",20,[[["k"],["self"]],["bool"]]],[11,"vzip","","",20,[[],["v"]]],[11,"try_into","","",20,[[],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"vzip","","",21,[[],["v"]]],[11,"try_from","","",21,[[["str"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"round_subsecs","","",22,[[["u16"]],["t"]]],[11,"trunc_subsecs","","",22,[[["u16"]],["t"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"vzip","","",22,[[],["v"]]],[11,"try_from","","",22,[[["str"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"round_subsecs","","",23,[[["u16"]],["t"]]],[11,"trunc_subsecs","","",23,[[["u16"]],["t"]]],[11,"equivalent","","",23,[[["k"],["self"]],["bool"]]],[11,"vzip","","",23,[[],["v"]]],[11,"try_from","","",23,[[["str"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"equivalent","","",24,[[["k"],["self"]],["bool"]]],[11,"vzip","","",24,[[],["v"]]],[11,"try_into","","",24,[[],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"round_subsecs","","",25,[[["u16"]],["t"]]],[11,"trunc_subsecs","","",25,[[["u16"]],["t"]]],[11,"equivalent","","",25,[[["k"],["self"]],["bool"]]],[11,"vzip","","",25,[[],["v"]]],[11,"try_from","","",25,[[["str"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["k"],["self"]],["bool"]]],[11,"vzip","","",26,[[],["v"]]],[11,"try_into","","",26,[[],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"equivalent","","",28,[[["k"],["self"]],["bool"]]],[11,"vzip","","",28,[[],["v"]]],[11,"try_into","","",28,[[],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"try_into","","",29,[[],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"try_into","","",30,[[],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"try_into","","",31,[[],["result"]]],[11,"from","","",35,[[],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"equivalent","","",35,[[["k"],["self"]],["bool"]]],[11,"vzip","","",35,[[],["v"]]],[11,"try_into","","",35,[[],["result"]]],[11,"from","","",36,[[],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"try_into","","",36,[[],["result"]]],[11,"from","my_iot::services::buienradar","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"try_into","","",37,[[],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"try_into","","",38,[[],["result"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"try_into","","",39,[[],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"try_into","","",40,[[],["result"]]],[11,"from","my_iot::services::clock","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"try_into","","",41,[[],["result"]]],[11,"from","my_iot::services::lua","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"try_into","","",42,[[],["result"]]],[11,"from","my_iot::services::nest","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"try_into","","",43,[[],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"try_into","","",44,[[],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"try_into","","",45,[[],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"try_into","","",46,[[],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"try_into","","",47,[[],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"try_into","","",48,[[],["result"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"try_into","","",49,[[],["result"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"try_into","","",50,[[],["result"]]],[11,"from","my_iot::services::telegram","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"try_into","","",51,[[],["result"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"try_into","","",52,[[],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"try_into","","",53,[[],["result"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"try_into","","",54,[[],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"try_into","","",55,[[],["result"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"try_into","","",56,[[],["result"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"try_into","","",57,[[],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"try_into","","",58,[[],["result"]]],[11,"from","my_iot::settings","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"try_into","","",59,[[],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"try_into","","",60,[[],["result"]]],[11,"from","my_iot::templates","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"try_into","","",61,[[],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"try_into","","",62,[[],["result"]]],[11,"from","my_iot::web","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"try_into","","",63,[[],["result"]]],[11,"drop","my_iot::prelude","",36,[[["self"]]]],[11,"default","","Creates a `Mutex<T>`, with the `Default` value for T.",36,[[],["mutex"]]],[11,"fmt","","",36,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"from","","Converts a `PathBuf` into an `Arc` by moving the `PathBuf`…",35,[[["pathbuf"]],[["path"],["arc",["path"]]]]],[11,"from","","Converts a [`OsString`] into a [`Arc`]`<OsStr>` without…",35,[[["osstring"]],[["arc",["osstr"]],["osstr"]]]],[11,"from","","Converts a [`CString`] into a [`Arc`]`<CStr>` without…",35,[[["cstring"]],[["cstr"],["arc",["cstr"]]]]],[11,"from","","Converts a `Path` into an `Arc` by copying the `Path` data…",35,[[["path"]],[["path"],["arc",["path"]]]]],[11,"from","","Creates a new mutex in an unlocked state ready for use.…",36,[[["t"]],["mutex"]]],[11,"from","","",35,[[["cstr"]],[["cstr"],["arc",["cstr"]]]]],[11,"from","","",35,[[["osstr"]],[["arc",["osstr"]],["osstr"]]]],[11,"fmt","","",35,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"drop","","Drops the `Arc`.",35,[[["self"]]]],[11,"default","","Creates a new `Arc<T>`, with the `Default` value for `T`.",35,[[],["arc"]]],[11,"hash","","",35,[[["self"],["h"]]]],[11,"from_iter","","Takes each element in the `Iterator` and collects it into…",35,[[["i"]],["arc"]]],[11,"partial_cmp","","Partial comparison for two `Arc`s.",35,[[["self"],["arc"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","Less-than comparison for two `Arc`s.",35,[[["self"],["arc"]],["bool"]]],[11,"le","","'Less than or equal to' comparison for two `Arc`s.",35,[[["self"],["arc"]],["bool"]]],[11,"gt","","Greater-than comparison for two `Arc`s.",35,[[["self"],["arc"]],["bool"]]],[11,"ge","","'Greater than or equal to' comparison for two `Arc`s.",35,[[["self"],["arc"]],["bool"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_from","","",35,[[["arc"]],[["result",["arc"]],["arc"]]]],[11,"cmp","","Comparison for two `Arc`s.",35,[[["self"],["arc"]],["ordering"]]],[11,"eq","","Equality for two `Arc`s.",35,[[["self"],["arc"]],["bool"]]],[11,"ne","","Inequality for two `Arc`s.",35,[[["self"],["arc"]],["bool"]]],[11,"deref","","",35,[[["self"]],["t"]]],[11,"as_ref","","",35,[[["self"]],["t"]]],[11,"fmt","","",35,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",35,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"from","","",35,[[["str"]],[["str"],["arc",["str"]]]]],[11,"from","","",35,[[["t"]],["arc"]]],[11,"from","","",35,[[["vec"]],["arc"]]],[11,"from","","",35,[[["string"]],[["str"],["arc",["str"]]]]],[11,"from","","",35,[[["box"]],["arc"]]],[11,"from","","",35,[[],["arc"]]],[11,"clone","","Makes a clone of the `Arc` pointer.",35,[[["self"]],["arc"]]],[11,"deserialize","","",21,[[["d"]],[["result",["naivedate"]],["naivedate"]]]],[11,"deserialize","","",25,[[["d"]],[["datetime",["utc"]],["result",["datetime"]]]]],[11,"deserialize","","",25,[[["d"]],[["datetime",["local"]],["result",["datetime"]]]]],[11,"deserialize","","",25,[[["d"]],[["datetime",["fixedoffset"]],["result",["datetime"]]]]],[11,"deserialize","","",23,[[["d"]],[["naivedatetime"],["result",["naivedatetime"]]]]],[11,"deserialize","","",17,[[["d"]],[["weekday"],["result",["weekday"]]]]],[11,"deserialize","","",22,[[["d"]],[["naivetime"],["result",["naivetime"]]]]],[11,"year","","",24,[[["self"]],["i32"]]],[11,"month","","",24,[[["self"]],["u32"]]],[11,"month0","","",24,[[["self"]],["u32"]]],[11,"day","","",24,[[["self"]],["u32"]]],[11,"day0","","",24,[[["self"]],["u32"]]],[11,"ordinal","","",24,[[["self"]],["u32"]]],[11,"ordinal0","","",24,[[["self"]],["u32"]]],[11,"weekday","","",24,[[["self"]],["weekday"]]],[11,"iso_week","","",24,[[["self"]],["isoweek"]]],[11,"with_year","","",24,[[["self"],["i32"]],[["option",["date"]],["date"]]]],[11,"with_month","","",24,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_month0","","",24,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_day","","",24,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_day0","","",24,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_ordinal","","",24,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_ordinal0","","",24,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"year","","Returns the year number in the calendar date.",23,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",23,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",23,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",23,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",23,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",23,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",23,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",23,[[["self"]],["weekday"]]],[11,"iso_week","","",23,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",23,[[["self"],["i32"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"year","","",25,[[["self"]],["i32"]]],[11,"month","","",25,[[["self"]],["u32"]]],[11,"month0","","",25,[[["self"]],["u32"]]],[11,"day","","",25,[[["self"]],["u32"]]],[11,"day0","","",25,[[["self"]],["u32"]]],[11,"ordinal","","",25,[[["self"]],["u32"]]],[11,"ordinal0","","",25,[[["self"]],["u32"]]],[11,"weekday","","",25,[[["self"]],["weekday"]]],[11,"iso_week","","",25,[[["self"]],["isoweek"]]],[11,"with_year","","",25,[[["self"],["i32"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month0","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day0","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal0","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"year","","Returns the year number in the calendar date.",21,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",21,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",21,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",21,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",21,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",21,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",21,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",21,[[["self"]],["weekday"]]],[11,"iso_week","","",21,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",21,[[["self"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",21,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",21,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",21,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",21,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",21,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",21,[[["u32"],["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"add_assign","","",23,[[["self"],["duration"]]]],[11,"add_assign","","",21,[[["self"],["duration"]]]],[11,"add_assign","","",22,[[["self"],["duration"]]]],[11,"fmt","","",64,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",25,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",21,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",24,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",17,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",23,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",26,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",65,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",22,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",20,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"sub","","",21,[[["duration"]],["naivedate"]]],[11,"sub","","",22,[[["duration"]],["naivetime"]]],[11,"sub","","",22,[[["naivetime"]],["duration"]]],[11,"sub","","",24,[[["duration"]],["date"]]],[11,"sub","","",23,[[["fixedoffset"]],["naivedatetime"]]],[11,"sub","","",21,[[["naivedate"]],["duration"]]],[11,"sub","","",25,[[["duration"]],["datetime"]]],[11,"sub","","",23,[[["naivedatetime"]],["duration"]]],[11,"sub","","",25,[[["datetime"]],["duration"]]],[11,"sub","","",25,[[["fixedoffset"]],["datetime"]]],[11,"sub","","",24,[[["date"]],["duration"]]],[11,"sub","","",23,[[["duration"]],["naivedatetime"]]],[11,"sub","","",22,[[["fixedoffset"]],["naivetime"]]],[11,"fmt","","",24,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",23,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",17,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",25,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",21,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",20,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",65,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",22,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"hour","","Returns the hour number from 0 to 23.",22,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",22,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",22,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",22,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",22,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",22,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",22,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",22,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",22,[[["self"]],["u32"]]],[11,"hour","","Returns the hour number from 0 to 23.",23,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",23,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",23,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",23,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"hour","","",25,[[["self"]],["u32"]]],[11,"minute","","",25,[[["self"]],["u32"]]],[11,"second","","",25,[[["self"]],["u32"]]],[11,"nanosecond","","",25,[[["self"]],["u32"]]],[11,"with_hour","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_minute","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_second","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_nanosecond","","",25,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"add","","",22,[[["duration"]],["naivetime"]]],[11,"add","","",25,[[["duration"]],["datetime"]]],[11,"add","","",22,[[["fixedoffset"]],["naivetime"]]],[11,"add","","",23,[[["duration"]],["naivedatetime"]]],[11,"add","","",24,[[["duration"]],["date"]]],[11,"add","","",25,[[["fixedoffset"]],["datetime"]]],[11,"add","","",21,[[["duration"]],["naivedate"]]],[11,"add","","",23,[[["fixedoffset"]],["naivedatetime"]]],[11,"cmp","","",23,[[["self"],["naivedatetime"]],["ordering"]]],[11,"cmp","","",21,[[["self"],["naivedate"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["datetime"]],["ordering"]]],[11,"cmp","","",24,[[["date"],["self"]],["ordering"]]],[11,"cmp","","",22,[[["naivetime"],["self"]],["ordering"]]],[11,"clone","","",23,[[["self"]],["naivedatetime"]]],[11,"clone","","",65,[[["self"]],["utc"]]],[11,"clone","","",26,[[["self"]],["secondsformat"]]],[11,"clone","","",20,[[["self"]],["fixedoffset"]]],[11,"clone","","",22,[[["self"]],["naivetime"]]],[11,"clone","","",24,[[["self"]],["date"]]],[11,"clone","","",21,[[["self"]],["naivedate"]]],[11,"clone","","",25,[[["self"]],["datetime"]]],[11,"clone","","",64,[[["self"]],["local"]]],[11,"clone","","",17,[[["self"]],["weekday"]]],[11,"partial_cmp","","",24,[[["date"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",21,[[["self"],["naivedate"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",21,[[["self"],["naivedate"]],["bool"]]],[11,"le","","",21,[[["self"],["naivedate"]],["bool"]]],[11,"gt","","",21,[[["self"],["naivedate"]],["bool"]]],[11,"ge","","",21,[[["self"],["naivedate"]],["bool"]]],[11,"partial_cmp","","",23,[[["self"],["naivedatetime"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",23,[[["self"],["naivedatetime"]],["bool"]]],[11,"le","","",23,[[["self"],["naivedatetime"]],["bool"]]],[11,"gt","","",23,[[["self"],["naivedatetime"]],["bool"]]],[11,"ge","","",23,[[["self"],["naivedatetime"]],["bool"]]],[11,"partial_cmp","","",22,[[["naivetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",22,[[["naivetime"],["self"]],["bool"]]],[11,"le","","",22,[[["naivetime"],["self"]],["bool"]]],[11,"gt","","",22,[[["naivetime"],["self"]],["bool"]]],[11,"ge","","",22,[[["naivetime"],["self"]],["bool"]]],[11,"partial_cmp","","Compare two DateTimes based on their true time, ignoring…",25,[[["self"],["datetime"]],[["ordering"],["option",["ordering"]]]]],[11,"from_offset","","",20,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",20,[[["self"],["naivedate"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_local_datetime","","",20,[[["self"],["naivedatetime"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_utc_date","","",20,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",20,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_offset","","",64,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",64,[[["self"],["naivedate"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_local_datetime","","",64,[[["self"],["naivedatetime"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_utc_date","","",64,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",64,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_local_date","","",64,[[["self"],["naivedate"]],[["localresult",["date"]],["date",["local"]]]]],[11,"from_local_datetime","","",64,[[["self"],["naivedatetime"]],[["localresult",["datetime"]],["datetime",["local"]]]]],[11,"from_utc_date","","",64,[[["self"],["naivedate"]],[["local"],["date",["local"]]]]],[11,"from_utc_datetime","","",64,[[["self"],["naivedatetime"]],[["local"],["datetime",["local"]]]]],[11,"from_offset","","",65,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",65,[[["self"],["naivedate"]],[["utc"],["localresult",["utc"]]]]],[11,"offset_from_local_datetime","","",65,[[["self"],["naivedatetime"]],[["utc"],["localresult",["utc"]]]]],[11,"offset_from_utc_date","","",65,[[["self"],["naivedate"]],["utc"]]],[11,"offset_from_utc_datetime","","",65,[[["self"],["naivedatetime"]],["utc"]]],[11,"from_str","","",22,[[["str"]],[["result",["naivetime","parseerror"]],["naivetime"],["parseerror"]]]],[11,"from_str","","",17,[[["str"]],[["weekday"],["result",["weekday"]]]]],[11,"from_str","","",25,[[["str"]],[["datetime",["utc"]],["parseerror"],["result",["datetime","parseerror"]]]]],[11,"from_str","","",25,[[["str"]],[["datetime",["local"]],["result",["datetime","parseerror"]],["parseerror"]]]],[11,"from_str","","",21,[[["str"]],[["result",["naivedate","parseerror"]],["naivedate"],["parseerror"]]]],[11,"from_str","","",23,[[["str"]],[["naivedatetime"],["result",["naivedatetime","parseerror"]],["parseerror"]]]],[11,"from_str","","",25,[[["str"]],[["parseerror"],["result",["datetime","parseerror"]],["datetime",["fixedoffset"]]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",25,[[["local"],["datetime",["local"]]],[["datetime",["fixedoffset"]],["fixedoffset"]]]],[11,"from","","",25,[[["systemtime"]],[["local"],["datetime",["local"]]]]],[11,"from","","",25,[[["systemtime"]],[["datetime",["utc"]],["utc"]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",25,[[["datetime",["fixedoffset"]],["fixedoffset"]],[["local"],["datetime",["local"]]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",25,[[["datetime",["fixedoffset"]],["fixedoffset"]],[["datetime",["utc"]],["utc"]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",25,[[["datetime",["utc"]],["utc"]],[["local"],["datetime",["local"]]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",25,[[["local"],["datetime",["local"]]],[["datetime",["utc"]],["utc"]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",25,[[["datetime",["utc"]],["utc"]],[["datetime",["fixedoffset"]],["fixedoffset"]]]],[11,"serialize","","",17,[[["s"],["self"]],["result"]]],[11,"serialize","","",21,[[["s"],["self"]],["result"]]],[11,"serialize","","Serialize into a rfc3339 time string",25,[[["s"],["self"]],["result"]]],[11,"serialize","","",22,[[["s"],["self"]],["result"]]],[11,"serialize","","",23,[[["s"],["self"]],["result"]]],[11,"sub_assign","","",23,[[["self"],["duration"]]]],[11,"sub_assign","","",22,[[["self"],["duration"]]]],[11,"sub_assign","","",21,[[["self"],["duration"]]]],[11,"fix","","",65,[[["self"]],["fixedoffset"]]],[11,"fix","","",20,[[["self"]],["fixedoffset"]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["h"]]]],[11,"hash","","",24,[[["self"],["h"]]]],[11,"hash","","",23,[[["self"],["h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"from_i64","","",17,[[["i64"]],[["weekday"],["option",["weekday"]]]]],[11,"from_u64","","",17,[[["u64"]],[["weekday"],["option",["weekday"]]]]],[11,"eq","","",20,[[["fixedoffset"],["self"]],["bool"]]],[11,"ne","","",20,[[["fixedoffset"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["datetime"]],["bool"]]],[11,"eq","","",23,[[["self"],["naivedatetime"]],["bool"]]],[11,"ne","","",23,[[["self"],["naivedatetime"]],["bool"]]],[11,"eq","","",21,[[["self"],["naivedate"]],["bool"]]],[11,"ne","","",21,[[["self"],["naivedate"]],["bool"]]],[11,"eq","","",65,[[["self"],["utc"]],["bool"]]],[11,"eq","","",24,[[["date"],["self"]],["bool"]]],[11,"eq","","",17,[[["weekday"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["secondsformat"]],["bool"]]],[11,"eq","","",22,[[["naivetime"],["self"]],["bool"]]],[11,"ne","","",22,[[["naivetime"],["self"]],["bool"]]],[11,"neg","","",28,[[],["duration"]]],[11,"mul","","",28,[[["i32"]],["duration"]]],[11,"div","","",28,[[["i32"]],["duration"]]],[11,"fmt","","",28,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"sub","","",28,[[["duration"]],["duration"]]],[11,"fmt","","",28,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"add","","",28,[[["duration"]],["duration"]]],[11,"cmp","","",28,[[["self"],["duration"]],["ordering"]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"clone","","",28,[[["self"]],["duration"]]],[11,"eq","","",28,[[["self"],["duration"]],["bool"]]],[11,"ne","","",28,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["duration"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",28,[[["self"],["duration"]],["bool"]]],[11,"le","","",28,[[["self"],["duration"]],["bool"]]],[11,"gt","","",28,[[["self"],["duration"]],["bool"]]],[11,"ge","","",28,[[["self"],["duration"]],["bool"]]],[11,"deserialize","","",36,[[["d"]],[["result",["mutex"]],["mutex"]]]],[11,"serialize","","",36,[[["s"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"drop","","",31,[[["self"]]]],[11,"clone","","",30,[[["self"]],["sender"]]],[11,"clone","","",29,[[["self"]],["receiver"]]],[11,"into_iter","","",29,[[]]],[11,"fmt","","",29,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",30,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"drop","","",30,[[["self"]]]],[11,"drop","","",29,[[["self"]]]],[11,"spawn_local_obj","","",35,[[["self"],["localfutureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status_local","","",35,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_obj","","",35,[[["futureobj"],["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","",35,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"register","","",35,[[["poll"],["token"],["pollopt"],["self"],["ready"]],[["result",["error"]],["error"]]]],[11,"reregister","","",35,[[["poll"],["token"],["pollopt"],["self"],["ready"]],[["result",["error"]],["error"]]]],[11,"deregister","","",35,[[["poll"],["self"]],[["result",["error"]],["error"]]]],[11,"unpark","","",35,[[["self"]]]],[11,"serialize","my_iot::core::value","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"deserialize","","",13,[[],[["box",["error"]],["result",["box"]]]]],[11,"open_and_initialize","my_iot::prelude","",31,[[["asref",["path"]],["path"]],[["box",["error"]],["result",["connection","box"]],["connection"]]]],[11,"get_version","","",31,[[["self"]],[["box",["error"]],["result",["i32","box"]],["i32"]]]],[11,"select_actuals","","",31,[[["i64"],["self"]],[["vec",["actual"]],["box",["error"]],["result",["vec","box"]]]]],[11,"select_size","","",31,[[["self"]],[["result",["u64","box"]],["box",["error"]],["u64"]]]],[11,"select_last_reading","","",31,[[["str"],["self"]],[["result",["option","box"]],["box",["error"]],["option",["actual"]]]]],[11,"select_readings","","",31,[[["str"],["datetime"],["self"]],[["box",["error"]],["result",["vec","box"]],["vec",["reading"]]]]],[11,"select_sensor_count","","",31,[[["self"]],[["result",["u64","box"]],["box",["error"]],["u64"]]]],[11,"select_reading_count","","",31,[[["self"]],[["result",["u64","box"]],["box",["error"]],["u64"]]]],[11,"as_ref","my_iot::core::value","",12,[[["self"]],["self"]]],[11,"from","my_iot::core::message","",2,[[["composer"]],["self"]]],[11,"from","my_iot::core::persistence","",6,[[["message"]],["self"]]],[11,"from","my_iot::core::value","",12,[[["thermodynamictemperature"]],["self"]]],[11,"from","","",12,[[["length"]],["self"]]],[11,"from","","",12,[[["bool"]],["self"]]],[11,"from","my_iot::services::telegram","",57,[[["str"]],["self"]]],[11,"from","","",58,[[["string"]],["self"]]],[11,"clone","my_iot::core::message","",2,[[["self"]],["message"]]],[11,"clone","","",5,[[["self"]],["type"]]],[11,"clone","","",3,[[["self"]],["metadata"]]],[11,"clone","my_iot::core::persistence::reading","",9,[[["self"]],["reading"]]],[11,"clone","my_iot::core::persistence::sensor","",10,[[["self"]],["sensor"]]],[11,"clone","my_iot::core::value","",12,[[["self"]],["value"]]],[11,"clone","","",13,[[["self"]],["pointofthecompass"]]],[11,"clone","my_iot::services::buienradar","",37,[[["self"]],["settings"]]],[11,"clone","","",40,[[["self"]],["buienradarstationmeasurement"]]],[11,"clone","my_iot::services::clock","",41,[[["self"]],["settings"]]],[11,"clone","my_iot::services::lua","",42,[[["self"]],["settings"]]],[11,"clone","my_iot::services::nest","",43,[[["self"]],["settings"]]],[11,"clone","my_iot::services::telegram","",51,[[["self"]],["settings"]]],[11,"clone","my_iot::settings","",59,[[["self"]],["settings"]]],[11,"clone","","",60,[[["self"]],["servicesettings"]]],[11,"default","my_iot::core::message","",3,[[],["self"]]],[11,"eq","","",5,[[["type"],["self"]],["bool"]]],[11,"eq","my_iot::core::persistence::reading","",9,[[["self"],["reading"]],["bool"]]],[11,"ne","","",9,[[["self"],["reading"]],["bool"]]],[11,"eq","my_iot::core::persistence::sensor","",10,[[["self"],["sensor"]],["bool"]]],[11,"ne","","",10,[[["self"],["sensor"]],["bool"]]],[11,"eq","my_iot::core::persistence","",6,[[["self"],["actual"]],["bool"]]],[11,"ne","","",6,[[["self"],["actual"]],["bool"]]],[11,"eq","my_iot::core::value","",12,[[["self"],["value"]],["bool"]]],[11,"ne","","",12,[[["self"],["value"]],["bool"]]],[11,"eq","","",13,[[["self"],["pointofthecompass"]],["bool"]]],[11,"deref","my_iot::web","",63,[[["self"]],["hashmap"]]],[11,"fmt","my_iot::core::message","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::core::persistence::reading","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::core::persistence::sensor","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::core::persistence","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::core::value","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::errors","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::services::buienradar","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::services::clock","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::services::lua","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::services::nest","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::services::telegram","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::settings","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::core::value","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","my_iot::errors","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","my_iot::templates","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"clap","my_iot","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"is_subcommand","","",0,[[],["bool"]]],[11,"initialize","my_iot::web","",63,[[["self"]]]],[11,"serialize","my_iot::core::persistence::reading","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","my_iot::core::value","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","my_iot::services::telegram","",57,[[["self"],["__s"]],["result"]]],[11,"serialize","","",58,[[["self"],["__s"]],["result"]]],[11,"deserialize","my_iot::core::message","",5,[[["__d"]],["result"]]],[11,"deserialize","my_iot::core::value","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","my_iot::services::buienradar","",37,[[["__d"]],["result"]]],[11,"deserialize","","",38,[[["__d"]],["result"]]],[11,"deserialize","","",39,[[["__d"]],["result"]]],[11,"deserialize","","",40,[[["__d"]],["result"]]],[11,"deserialize","my_iot::services::clock","",41,[[["__d"]],["result"]]],[11,"deserialize","my_iot::services::lua","",42,[[["__d"]],["result"]]],[11,"deserialize","my_iot::services::nest","",43,[[["__d"]],["result"]]],[11,"deserialize","","",44,[[["__d"]],["result"]]],[11,"deserialize","","",45,[[["__d"]],["result"]]],[11,"deserialize","","",46,[[["__d"]],["result"]]],[11,"deserialize","","",47,[[["__d"]],["result"]]],[11,"deserialize","","",48,[[["__d"]],["result"]]],[11,"deserialize","","",49,[[["__d"]],["result"]]],[11,"deserialize","","",50,[[["__d"]],["result"]]],[11,"deserialize","my_iot::services::telegram","",51,[[["__d"]],["result"]]],[11,"deserialize","","",53,[[["__d"]],["result"]]],[11,"deserialize","","",54,[[["__d"]],["result"]]],[11,"deserialize","","",55,[[["__d"]],["result"]]],[11,"deserialize","","",56,[[["__d"]],["result"]]],[11,"deserialize","my_iot::settings","",59,[[["__d"]],["result"]]],[11,"deserialize","","",60,[[["__d"]],["result"]]],[11,"from_lua","my_iot::core::message","",5,[[["value"],["context"]],["result"]]],[11,"from_lua","my_iot::core::value","",13,[[["value"],["context"]],["result"]]],[11,"to_lua","","",12,[[["context"]],[["result",["value"]],["value"]]]],[11,"to_lua","","",13,[[["context"]],[["result",["value"]],["value"]]]],[11,"to_lua","my_iot::core::message","",5,[[["context"]],[["result",["value"]],["value"]]]],[11,"render_into","my_iot::templates","",61,[[["write"],["self"]],["result"]]],[11,"extension","","",61,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",61,[[["self"]],["usize"]]],[11,"render_into","","",62,[[["write"],["self"]],["result"]]],[11,"extension","","",62,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",62,[[["self"]],["usize"]]],[11,"size_hint","","",61,[[],["usize"]]],[11,"extension","","",61,[[],[["option",["str"]],["str"]]]],[11,"size_hint","","",62,[[],["usize"]]],[11,"extension","","",62,[[],[["option",["str"]],["str"]]]],[11,"send_and_forget","my_iot::core::message","Send the message via the specified sender and log and…",2,[[["sender"]]]],[11,"serialize_to_vec","my_iot::core::value","",12,[[["self"]],[["box",["error"]],["vec",["u8"]],["result",["vec","box"]]]]],[11,"succ","my_iot::prelude","The next day in the week.",17,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",17,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",17,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",17,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",17,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",17,[[["self"]],["u32"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",64,[[],[["local"],["date",["local"]]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",64,[[],[["local"],["datetime",["local"]]]]],[11,"today","","Returns a `Date` which corresponds to the current date.",65,[[],[["date",["utc"]],["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",65,[[],[["datetime",["utc"]],["utc"]]]],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",20,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",20,[[["i32"]],[["option",["fixedoffset"]],["fixedoffset"]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",20,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",20,[[["i32"]],[["option",["fixedoffset"]],["fixedoffset"]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",20,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",20,[[["self"]],["i32"]]],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",21,[[["u32"],["i32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",21,[[["u32"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",21,[[["u32"],["i32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",21,[[["u32"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",21,[[["u32"],["weekday"],["i32"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",21,[[["u32"],["weekday"],["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from a day's number in the…",21,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from a day's number in the…",21,[[["i32"]],[["naivedate"],["option",["naivedate"]]]]],[11,"from_weekday_of_month","","Makes a new `NaiveDate` by counting the number of…",21,[[["u32"],["weekday"],["i32"],["u8"]],["naivedate"]]],[11,"from_weekday_of_month_opt","","Makes a new `NaiveDate` by counting the number of…",21,[[["u32"],["weekday"],["i32"],["u8"]],[["naivedate"],["option",["naivedate"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",21,[[["str"]],[["result",["naivedate","parseerror"]],["naivedate"],["parseerror"]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",21,[[["naivetime"],["self"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",21,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",21,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",21,[[["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",21,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",21,[[["self"]],[["naivedate"],["option",["naivedate"]]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",21,[[["duration"]],[["naivedate"],["option",["naivedate"]]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",21,[[["duration"]],[["naivedate"],["option",["naivedate"]]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",21,[[["naivedate"]],["duration"]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",21,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",21,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",22,[[["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",22,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",22,[[["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",22,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",22,[[["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",22,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",22,[[["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",22,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",22,[[["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",22,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",22,[[["str"]],[["result",["naivetime","parseerror"]],["naivetime"],["parseerror"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",22,[[["self"],["duration"]]]],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",22,[[["self"],["duration"]]]],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",22,[[["naivetime"]],["duration"]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",22,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the…",22,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",23,[[["naivetime"],["naivedate"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",23,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",23,[[["i64"],["u32"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",23,[[["str"]],[["naivedatetime"],["result",["naivedatetime","parseerror"]],["parseerror"]]]],[11,"date","","Retrieves a date component.",23,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",23,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",23,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",23,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",23,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",23,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",23,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",23,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",23,[[["duration"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",23,[[["duration"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",23,[[["naivedatetime"]],["duration"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",23,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",23,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"from_utc","","Makes a new `Date` with given UTC date and offset. The…",24,[[["naivedate"]],["date"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",24,[[["naivetime"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",24,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",24,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",24,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",24,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",24,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",24,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",24,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",24,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"succ","","Makes a new `Date` for the next date.",24,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",24,[[["self"]],[["option",["date"]],["date"]]]],[11,"pred","","Makes a new `Date` for the prior date.",24,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",24,[[["self"]],[["option",["date"]],["date"]]]],[11,"offset","","Retrieves an associated offset from UTC.",24,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",24,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",24,[[["tz2"],["self"]],["date"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",24,[[["duration"]],[["option",["date"]],["date"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",24,[[["duration"]],[["option",["date"]],["date"]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",24,[[["date"]],["duration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",24,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",24,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",24,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",24,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",25,[[["naivedatetime"]],["datetime"]]],[11,"date","","Retrieves a date component.",25,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",25,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",25,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",25,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",25,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",25,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",25,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",25,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",25,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",25,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",25,[[["tz2"],["self"]],["datetime"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",25,[[["duration"]],[["datetime"],["option",["datetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",25,[[["duration"]],[["datetime"],["option",["datetime"]]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",25,[[["datetime"]],["duration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",25,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",25,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",25,[[["str"]],[["parseerror"],["result",["datetime","parseerror"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",25,[[["str"]],[["parseerror"],["result",["datetime","parseerror"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",25,[[["str"]],[["parseerror"],["result",["datetime","parseerror"]],["datetime",["fixedoffset"]]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",25,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",25,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",25,[[["bool"],["self"],["secondsformat"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",25,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",25,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",28,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",28,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",28,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",28,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",28,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",28,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",28,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",28,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",28,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",28,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",28,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",28,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",28,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",28,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",28,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",28,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",28,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",28,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",28,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",28,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",28,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",28,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",28,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",28,[[["duration"]],[["duration"],["outofrangeerror"],["result",["duration","outofrangeerror"]]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",28,[[["self"]],[["duration"],["result",["duration","outofrangeerror"]],["outofrangeerror"]]]],[11,"try_recv","","Attempts to receive a message from the channel without…",29,[[["self"]],[["result",["tryrecverror"]],["tryrecverror"]]]],[11,"recv","","Blocks the current thread until a message is received or…",29,[[["self"]],[["recverror"],["result",["recverror"]]]]],[11,"recv_timeout","","Waits for a message to be received from the channel, but…",29,[[["duration"],["self"]],[["recvtimeouterror"],["result",["recvtimeouterror"]]]]],[11,"is_empty","","Returns `true` if the channel is empty.",29,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the channel is full.",29,[[["self"]],["bool"]]],[11,"len","","Returns the number of messages in the channel.",29,[[["self"]],["usize"]]],[11,"capacity","","If the channel is bounded, returns its capacity.",29,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"iter","","A blocking iterator over messages in the channel.",29,[[["self"]],["iter"]]],[11,"try_iter","","A non-blocking iterator over messages in the channel.",29,[[["self"]],["tryiter"]]],[11,"same_channel","","Returns `true` if receivers belong to the same channel.",29,[[["receiver"],["self"]],["bool"]]],[11,"try_send","","Attempts to send a message into the channel without…",30,[[["self"],["t"]],[["result",["trysenderror"]],["trysenderror"]]]],[11,"send","","Blocks the current thread until a message is sent or the…",30,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"send_timeout","","Waits for a message to be sent into the channel, but only…",30,[[["duration"],["self"],["t"]],[["result",["sendtimeouterror"]],["sendtimeouterror"]]]],[11,"is_empty","","Returns `true` if the channel is empty.",30,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the channel is full.",30,[[["self"]],["bool"]]],[11,"len","","Returns the number of messages in the channel.",30,[[["self"]],["usize"]]],[11,"capacity","","If the channel is bounded, returns its capacity.",30,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"same_channel","","Returns `true` if senders belong to the same channel.",30,[[["sender"],["self"]],["bool"]]],[11,"busy_timeout","","Set a busy handler that sleeps for a specified amount of…",31,[[["duration"],["self"]],[["result",["error"]],["error"]]]],[11,"busy_handler","","Register a callback to handle `SQLITE_BUSY` errors.",31,[[["option"],["self"]],[["result",["error"]],["error"]]]],[11,"prepare_cached","","Prepare a SQL statement for execution, returning a…",31,[[["str"],["self"]],[["error"],["result",["cachedstatement","error"]],["cachedstatement"]]]],[11,"set_prepared_statement_cache_capacity","","Set the maximum number of cached prepared statements this…",31,[[["self"],["usize"]]]],[11,"flush_prepared_statement_cache","","Remove/finalize all prepared statements currently in the…",31,[[["self"]]]],[11,"db_config","","Returns the current value of a `config`.",31,[[["dbconfig"],["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"set_db_config","","Make configuration changes to a database connection",31,[[["dbconfig"],["self"],["bool"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"pragma_query_value","","Query the current value of `pragma_name`.",31,[[["option",["databasename"]],["str"],["databasename"],["self"],["f"]],[["result",["error"]],["error"]]]],[11,"pragma_query","","Query the current rows/values of `pragma_name`.",31,[[["option",["databasename"]],["str"],["databasename"],["self"],["f"]],[["result",["error"]],["error"]]]],[11,"pragma","","Query the current value(s) of `pragma_name` associated to…",31,[[["option",["databasename"]],["str"],["f"],["databasename"],["self"],["tosql"]],[["result",["error"]],["error"]]]],[11,"pragma_update","","Set a new value to `pragma_name`.",31,[[["option",["databasename"]],["str"],["databasename"],["self"],["tosql"]],[["result",["error"]],["error"]]]],[11,"pragma_update_and_check","","Set a new value to `pragma_name` and return the updated…",31,[[["option",["databasename"]],["str"],["f"],["databasename"],["self"],["tosql"]],[["result",["error"]],["error"]]]],[11,"transaction","","Begin a new transaction with the default behavior…",31,[[["self"]],[["transaction"],["result",["transaction","error"]],["error"]]]],[11,"transaction_with_behavior","","Begin a new transaction with a specified behavior.",31,[[["self"],["transactionbehavior"]],[["transaction"],["result",["transaction","error"]],["error"]]]],[11,"savepoint","","Begin a new savepoint with the default behavior (DEFERRED).",31,[[["self"]],[["result",["savepoint","error"]],["savepoint"],["error"]]]],[11,"savepoint_with_name","","Begin a new savepoint with a specified name.",31,[[["self"],["t"]],[["result",["savepoint","error"]],["savepoint"],["error"]]]],[11,"open","","Open a new connection to a SQLite database.",31,[[["p"]],[["error"],["result",["connection","error"]],["connection"]]]],[11,"open_in_memory","","Open a new connection to an in-memory SQLite database.",31,[[],[["error"],["result",["connection","error"]],["connection"]]]],[11,"open_with_flags","","Open a new connection to a SQLite database.",31,[[["openflags"],["p"]],[["error"],["result",["connection","error"]],["connection"]]]],[11,"open_in_memory_with_flags","","Open a new connection to an in-memory SQLite database.",31,[[["openflags"]],[["error"],["result",["connection","error"]],["connection"]]]],[11,"execute_batch","","Convenience method to run multiple SQL statements (that…",31,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"execute","","Convenience method to prepare and execute a single SQL…",31,[[["str"],["self"],["p"]],[["result",["usize","error"]],["usize"],["error"]]]],[11,"execute_named","","Convenience method to prepare and execute a single SQL…",31,[[["str"],["self"]],[["result",["usize","error"]],["usize"],["error"]]]],[11,"last_insert_rowid","","Get the SQLite rowid of the most recent successful INSERT.",31,[[["self"]],["i64"]]],[11,"query_row","","Convenience method to execute a query that is expected to…",31,[[["str"],["p"],["self"],["f"]],[["result",["error"]],["error"]]]],[11,"query_row_named","","Convenience method to execute a query with named…",31,[[["str"],["self"],["f"]],[["result",["error"]],["error"]]]],[11,"query_row_and_then","","Convenience method to execute a query that is expected to…",31,[[["str"],["p"],["self"],["f"]],["result"]]],[11,"prepare","","Prepare a SQL statement for execution.",31,[[["str"],["self"]],[["error"],["result",["statement","error"]],["statement"]]]],[11,"close","","Close the SQLite connection.",31,[[],["result"]]],[11,"handle","","Get access to the underlying SQLite database connection…",31,[[["self"]]]],[11,"from_handle","","Create a `Connection` from a raw handle.",31,[[],[["error"],["result",["connection","error"]],["connection"]]]],[11,"get_interrupt_handle","","Get access to a handle that can be used to interrupt long…",31,[[["self"]],["interrupthandle"]]],[11,"is_autocommit","","Test for auto-commit mode. Autocommit mode is on by default.",31,[[["self"]],["bool"]]],[11,"is_busy","","Determine if all associated prepared statements have been…",31,[[["self"]],["bool"]]],[11,"is","","Returns `true` if the boxed type is the same as `T`",34,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type…",34,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is…",34,[[["self"]],[["option"],["t"]]]],[11,"is","","Forwards to the method defined on the type `dyn Error`.",34,[[["self"]],["bool"]]],[11,"downcast_ref","","Forwards to the method defined on the type `dyn Error`.",34,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Forwards to the method defined on the type `dyn Error`.",34,[[["self"]],[["option"],["t"]]]],[11,"is","","Forwards to the method defined on the type `dyn Error`.",34,[[["self"]],["bool"]]],[11,"downcast_ref","","Forwards to the method defined on the type `dyn Error`.",34,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut","","Forwards to the method defined on the type `dyn Error`.",34,[[["self"]],[["option"],["t"]]]],[11,"downcast","","Attempts to downcast the box to a concrete type.",34,[[["box",["error"]],["error"]],[["box",["error"]],["result",["box","box"]],["box"]]]],[11,"chain","","Returns an iterator starting with the current error and…",34,[[["self"]],["chain"]]],[11,"downcast","","Attempts to downcast the box to a concrete type.",34,[[["error"],["box",["error"]]],[["result",["box","box"]],["box",["error"]],["box"]]]],[11,"downcast","","Attempts to downcast the box to a concrete type.",34,[[["error"],["box",["error"]]],[["box",["error"]],["result",["box","box"]],["box"]]]],[11,"new","","Constructs a new `Arc<T>`.",35,[[["t"]],["arc"]]],[11,"new_uninit","","Constructs a new `Arc` with uninitialized contents.",35,[[],[["maybeuninit"],["arc",["maybeuninit"]]]]],[11,"new_zeroed","","Constructs a new `Arc` with uninitialized contents, with…",35,[[],[["maybeuninit"],["arc",["maybeuninit"]]]]],[11,"pin","","Constructs a new `Pin<Arc<T>>`. If `T` does not implement…",35,[[["t"]],[["pin",["arc"]],["arc"]]]],[11,"try_unwrap","","Returns the inner value, if the `Arc` has exactly one…",35,[[["arc"]],[["result",["arc"]],["arc"]]]],[11,"new_uninit_slice","","Constructs a new reference-counted slice with…",35,[[["usize"]],["arc"]]],[11,"assume_init","","Converts to `Arc<T>`.",35,[[],["arc"]]],[11,"assume_init","","Converts to `Arc<[T]>`.",35,[[],["arc"]]],[11,"into_raw","","Consumes the `Arc`, returning the wrapped pointer.",35,[[["arc"]]]],[11,"from_raw","","Constructs an `Arc` from a raw pointer.",35,[[],["arc"]]],[11,"into_raw_non_null","","Consumes the `Arc`, returning the wrapped pointer as…",35,[[["arc"]],["nonnull"]]],[11,"downgrade","","Creates a new [`Weak`][weak] pointer to this allocation.",35,[[["arc"]],["weak"]]],[11,"weak_count","","Gets the number of [`Weak`][weak] pointers to this…",35,[[["arc"]],["usize"]]],[11,"strong_count","","Gets the number of strong (`Arc`) pointers to this…",35,[[["arc"]],["usize"]]],[11,"ptr_eq","","Returns `true` if the two `Arc`s point to the same…",35,[[["arc"]],["bool"]]],[11,"make_mut","","Makes a mutable reference into the given `Arc`.",35,[[["arc"]],["t"]]],[11,"get_mut","","Returns a mutable reference into the given `Arc`, if there…",35,[[["arc"]],[["option"],["t"]]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given `Arc`, without…",35,[[["arc"]],["t"]]],[11,"downcast","","Attempt to downcast the `Arc<dyn Any + Send + Sync>` to a…",35,[[],[["result",["arc","arc"]],["arc",["any"]],["arc"]]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",36,[[["t"]],["mutex"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",36,[[["self"]],[["result",["mutexguard","poisonerror"]],["mutexguard"],["poisonerror",["mutexguard"]]]]],[11,"try_lock","","Attempts to acquire this lock.",36,[[["self"]],[["result",["mutexguard","trylockerror"]],["mutexguard"],["trylockerror",["mutexguard"]]]]],[11,"is_poisoned","","Determines whether the mutex is poisoned.",36,[[["self"]],["bool"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",36,[[],[["result",["poisonerror"]],["poisonerror"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",36,[[["self"]],[["poisonerror"],["t"],["result",["poisonerror"]]]]]],"p":[[3,"Opt"],[3,"Bus"],[3,"Message"],[3,"Metadata"],[3,"Composer"],[4,"Type"],[3,"Actual"],[8,"Serialize"],[8,"Deserialize"],[3,"Reading"],[3,"Sensor"],[8,"ConnectionExtensions"],[4,"Value"],[4,"PointOfTheCompass"],[3,"InternalError"],[8,"Datelike"],[8,"Timelike"],[4,"Weekday"],[8,"TimeZone"],[8,"Offset"],[3,"FixedOffset"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"SecondsFormat"],[8,"SubsecRound"],[3,"Duration"],[3,"Receiver"],[3,"Sender"],[3,"Connection"],[8,"Deserialize"],[8,"Serialize"],[8,"Error"],[3,"Arc"],[3,"Mutex"],[3,"Settings"],[3,"BuienradarFeed"],[3,"BuienradarFeedActual"],[3,"BuienradarStationMeasurement"],[3,"Settings"],[3,"Settings"],[3,"Settings"],[3,"NestEvent"],[3,"NestData"],[3,"NestDevices"],[3,"NestThermostat"],[3,"NestCamera"],[3,"NestCameraLastEvent"],[3,"NestSmokeCoAlarm"],[3,"Settings"],[3,"Context"],[3,"TelegramResponse"],[3,"TelegramUpdate"],[3,"TelegramMessage"],[3,"TelegramChat"],[4,"TelegramChatId"],[4,"TelegramFile"],[3,"Settings"],[4,"ServiceSettings"],[3,"Index"],[3,"Actual"],[3,"STATICS"],[3,"Local"],[3,"Utc"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);